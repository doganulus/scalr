CMAKE_MINIMUM_REQUIRED(VERSION 3.12)

FILE(READ "${CMAKE_CURRENT_SOURCE_DIR}/include/scalr/version.hpp" version)

STRING(REGEX MATCH "VERSION_MAJOR ([0-9]*)" _ ${version})
SET(SCALR_VERSION_MAJOR ${CMAKE_MATCH_1})
STRING(REGEX MATCH "VERSION_MINOR ([0-9]*)" _ ${version})
SET(SCALR_VERSION_MINOR ${CMAKE_MATCH_1})
STRING(REGEX MATCH "VERSION_PATCH ([0-9]*)" _ ${version})
SET(SCALR_VERSION_PATCH ${CMAKE_MATCH_1})

PROJECT(scalr
        LANGUAGES CXX
        VERSION "${SCALR_VERSION_MAJOR}.${SCALR_VERSION_MINOR}.${SCALR_VERSION_PATCH}"
        DESCRIPTION "Physical quantity/unit library for Modern C++"
        HOMEPAGE_URL "https://github.com/doganulus/scalr"
)

SET(CMAKE_CXX_STANDARD 11)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)
SET(CMAKE_CXX_EXTENSIONS OFF)
SET(CMAKE_EXPORT_COMPILE_COMMANDS ON)

INCLUDE(CTest)
INCLUDE(GNUInstallDirs)

SET(SCALR_TARGET_NAME "${PROJECT_NAME}")
SET(SCALR_TARGETS_EXPORT_NAME "${PROJECT_NAME}Targets")

ADD_LIBRARY(${SCALR_TARGET_NAME} INTERFACE)
ADD_LIBRARY(${PROJECT_NAME}::${SCALR_TARGET_NAME} ALIAS ${SCALR_TARGET_NAME})

SET_TARGET_PROPERTIES(
  ${SCALR_TARGET_NAME} PROPERTIES VERSION ${PROJECT_VERSION}
)

TARGET_INCLUDE_DIRECTORIES(
  ${SCALR_TARGET_NAME}
  INTERFACE $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
            $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>
)

# Install
INSTALL(TARGETS ${SCALR_TARGET_NAME}
        EXPORT ${SCALR_TARGETS_EXPORT_NAME}
        ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
        LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
        RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
)

IF(BUILD_TESTING)
  ENABLE_TESTING()
  ADD_SUBDIRECTORY(tests)
ENDIF()
